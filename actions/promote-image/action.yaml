name: 'Promote Docker image'
inputs:
  repo_domain:
    required: true
  repo_user:
    required: true
  repo_token:
    required: true
  repo_project:
    required: true
  repo_name:
    required: true
  env_from:
    required: true
  version:
    required: true
outputs:
  image_name:
    value: ${{ steps.promote.outputs.image_name }}
runs:
  using: "composite"
  steps:
    - 
      name: Pull latest Docker image build for version '${{ inputs.version }}'
      id: pull
      shell: bash
      env:
        DOCKER_API_URL: 'https://${{ inputs.repo_domain }}/v2/${{ inputs.repo_project }}/${{ inputs.repo_name }}/${{ inputs.env_from }}/tags/list'
      run: |
        RESPONSE=$(curl -u '${{ inputs.repo_user }}:${{ inputs.repo_token }}' --request GET '${{ env.DOCKER_API_URL }}')
        BUILD=$(echo $RESPONSE | jq .tags[] | jq 'select(. | startswith("${{ inputs.version }}"))' | sed 's/${{ inputs.version }}.//g' | sed 's/[latest ,\"]//g' | sort --version-sort -r | head -1)
        TAG='${{ inputs.repo_domain }}/${{ inputs.repo_project }}/${{ inputs.repo_name }}/${{ inputs.env_from }}:${{ inputs.version }}'
        docker pull "$TAG.$BUILD"
        echo "latest_tag=$TAG" >> $GITHUB_ENV
        echo "latest_build=$BUILD" >> $GITHUB_ENV
    -
      name: Promote latest Docker image
      id: promote
      shell: bash
      env:
        SOURCE_IMAGE: '${{ steps.pull.outputs.latest_tag }}.${{ steps.pull.outputs.latest_build }}'
        DESTINATION_IMAGE: '${{ inputs.repo_domain }}/${{ inputs.repo_project }}/${{ inputs.repo_name }}'
      run: |
        docker tag '${{ env.SOURCE_IMAGE }}' '${{ env.DESTINATION_IMAGE }}:${{ inputs.version }}'
        docker tag '${{ env.SOURCE_IMAGE }}' '${{ env.DESTINATION_IMAGE }}:latest'
        docker push "${{ env.DESTINATION_IMAGE }}:${{ inputs.version }}"
        docker push '${{ env.DESTINATION_IMAGE }}:latest'
        echo "image_name=${{ env.DESTINATION_IMAGE }}" >> $GITHUB_ENV
