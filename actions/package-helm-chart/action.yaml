name: 'Package Helm Chart'
inputs:
  chart_dir:
    required: true
  chart_name:
    required: true
  chart_version:
    required: true
  push:
    required: false
    default: false
  helm_repository_project:
    required: false
    default: ''
runs:
  using: "composite"
  steps:
    - 
      id: package
      name: Package Helm chart
      shell: bash
      run: |
        CHART_PATH=${{ inputs.chart_dir }}/${{ inputs.chart_name }}
        PACKAGE_PATH=$(helm package $CHART_PATH --app-version '${{ inputs.chart_version }}' --version '${{ inputs.chart_version }}' --dependency-update --destination $CHART_PATH/output)
        echo ::set-output name=CHART_PACKAGE::$PACKAGE_PATH
    -
      name: Get package path
      id: split
      shell: bash
      run: |
        PACKAGE='${{ steps.package.outputs.CHART_PACKAGE }}'
        echo ::set-output name=NAME::$(echo "${PACKAGE:*:}")
    - 
      # conditionals workaround
      uses: ChristopherHX/conditional@b4a9649204f81002ec9a4ef7d4bf7d6b2ab7fa55
      with:
        if: ${{ inputs.push == 'true' }}
        step: |
          name: Push Helm chart to registry
          shell: bash
          run: helm cm-push ${{ steps.split.outputs.NAME }} ${{ inputs.helm_repository_project }}