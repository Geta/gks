name: Create Release
on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
        description: 'Project name'
      app_name:
        required: true
        type: string
        description: 'Application name'
      version:
        required: true
        type: string
        description: 'Release version'
      env_from:
        required: true
        type: string
        description: 'Source environment'
      helm_chart_dir:
        required: false
        type: string
        description: 'Helm chart directory'
        default: 'chart'
      harbor_domain:
        required: true
        type: string
        description: 'Harbor repository domain name'
    secrets:
      harbor_user:
        required: true
        description: 'Harbor repository user name'
      harbor_token:
        required: true
        description: 'Harbor repository user token'
jobs:
  publish-docker:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.image.outputs.image_name }}
    steps:
      -
        name: Log in to Harbor
        uses: docker/login-action@v1
        with:
          registry: '${{ inputs.harbor_domain }}/${{ inputs.project_name }}'
          username: ${{ secrets.harbor_user }}
          password: ${{ secrets.harbor_token }}
      -
        name: Promote Docker Image
        id: image
        uses: Geta/gks/actions/promote-image@actions/v1
        with:
          repo_domain: ${{ inputs.harbor_domain }}
          repo_user: ${{ secrets.harbor_user }}
          repo_token: ${{ secrets.harbor_token }}
          repo_project: ${{ inputs.project_name }}
          repo_name: ${{ inputs.app_name }}
          env_from: ${{ inputs.env_from }}
          version: ${{ inputs.version }}

  publish-helm:
    needs: publish-docker
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Helm
        uses: Geta/gks/actions/setup-helm@actions/v1
        env:
          HELM_REPO_URL: 'https://${{ inputs.harbor_domain }}/chartrepo'
        with:
          helm_repository_url: ${{ env.HELM_REPO_URL }}
          helm_repository_user: ${{ secrets.harbor_user }}
          helm_repository_token: ${{ secrets.harbor_token }}
          helm_repository_project: ${{ inputs.project_name }}
      -
        name: Compose Helm chart names
        id: chart
        run: |
          SRC_CHART_NAME='${{ inputs.project_name }}-${{ inputs.app_name }}-${{ inputs.env_from }}'
          DST_CHART_NAME='${{ inputs.project_name }}-${{ inputs.app_name }}'
          echo "src_chart_name=$SRC_CHART_NAME" >> $GITHUB_ENV
          echo "dst_chart_name=$DST_CHART_NAME" >> $GITHUB_ENV
      -
        name: Pull chart
        uses: Geta/gks/actions/pull-chart@actions/v1
        with:
          chart_dir: '${{ inputs.helm_chart_dir }}/${{ steps.chart.outputs.dst_chart_name }}'
          chart_name: ${{ steps.chart.outputs.src_chart_name }}
          chart_version: '^${{ inputs.version }}-1'
          repo_project: ${{ inputs.project_name }}
      -
        name: Set chart info
        uses: Geta/gks/actions/set-chart-info@actions/v1
        with:
          chart_dir: '${{ inputs.helm_chart_dir }}/${{ steps.chart.outputs.dst_chart_name }}'
          chart_name: ${{ steps.chart.outputs.dst_chart_name }}
          chart_description: '${{ inputs.app_name }} chart'
          chart_version: ${{ inputs.version }}
          chart_app_version: ${{ inputs.version }}
          docker_image_url: ${{ needs.publish-docker.outputs.image_name }}
          docker_image_tag: ${{ inputs.version }}
      -
        name: Lint Helm Chart
        uses: Geta/gks/actions/lint-helm-chart@actions/v1
        with:
          chart_dir: '${{ inputs.helm_chart_dir }}/${{ steps.chart.outputs.dst_chart_name }}'
      -
        name: Generate README
        uses: Geta/gks/actions/generate-chart-readme@actions/v1
        with:
          chart_dir: '${{ inputs.helm_chart_dir }}/${{ steps.chart.outputs.dst_chart_name }}'
      -
        name: Push service Helm chart
        uses: Geta/gks/actions/package-helm-chart@actions/v1
        with:
          chart_dir: '${{ inputs.helm_chart_dir }}/${{ steps.chart.outputs.dst_chart_name }}'
          chart_name: ${{ steps.chart.outputs.dst_chart_name }}
          chart_version: ${{ inputs.version }}
          helm_repository_project: ${{ inputs.project_name }}
          push: true