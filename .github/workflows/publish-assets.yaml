name: Publish Assets
on:
  workflow_call:
    inputs:
      git_ref:
        required: true
        type: string
        description: 'Git reference'
      submodules:
        required: false
        type: boolean
        description: 'Checkout submodules'
        default: false
      app_name:
        required: true
        type: string
        description: 'Application name'
      dockerfile:
        required: true
        type: string
        description: 'Dockerfile path'
      project_name:
        required: true
        type: string
        description: 'Project name'
      shared_project_name:
        required: false
        type: string
        description: 'Shared project name'
        default: 'gks'
      proxy_project_name:
        required: true
        type: string
        description: 'Proxy cache project name'
      version:
        required: true
        type: string
        description: 'Release version'
      build_number:
        required: true
        type: string
        description: 'Build number'
      environment:
        required: true
        type: string
        description: 'Environment name'
      docker_context:
        required: false
        type: string
        description: 'Docker build context'
        default: '.'
      docker_tags:
        required: false
        type: string
        description: 'Additional docker image tags'
        default: ''
      docker_args:
        required: false
        type: string
        description: 'Docker build args'
        default: ''
      helm_chart_dir:
        required: false
        type: string
        description: 'Helm chart directory'
        default: 'chart'
      helm_template_chart_name:
        required: false
        type: string
        description: 'Template chart name'
        default: 'gks-template'
      helm_template_chart_version:
        required: true
        type: string
        description: 'Template chart name'
    secrets:
      gh_token:
        required: true
        description: 'GitHub token'
      harbor_address:
        required: true
        description: 'Harbor repository address'
      harbor_user:
        required: true
        description: 'Harbor repository user name'
      harbor_token:
        required: true
        description: 'Harbor repository user token'
      docker_args:
        required: false
        description: 'Docker secret args'
jobs:
  publish-docker:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.image.outputs.image_name }}
      image_tag: ${{ steps.image.outputs.image_tag }}
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.git_ref }}
          token: ${{ secrets.gh_token }}
          submodules: ${{ inputs.submodules }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Log in to Harbor
        uses: docker/login-action@v1
        with:
          registry: '${{ secrets.harbor_address }}/${{ inputs.project_name }}'
          username: ${{ secrets.harbor_user }}
          password: ${{ secrets.harbor_token }}
      -
        name: Compose Docker image info
        id: image
        run: |
          IMAGE_NAME='${{ secrets.harbor_address }}/${{ inputs.project_name }}/${{ inputs.app_name }}/${{ inputs.environment }}'
          IMAGE_TAG='${{ inputs.version }}-${{ inputs.environment }}.${{ inputs.build_number }}'
          echo ::set-output name=image_name::$IMAGE_NAME
          echo ::set-output name=image_tag::$IMAGE_TAG
      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v2
        env:
          cache_image: '${{ steps.image.outputs.image_name }}:cache'
        with:
          push: true
          #cache-from: type=registry,ref=${{ env.cache_image }}
          #cache-to: type=registry,mode=max,ref=${{ env.cache_image }}
          context: ${{ inputs.docker_context }}
          file: ${{ inputs.dockerfile }}
          build-args: |
            DOCKER_REGISTRY=${{ secrets.harbor_address }}/${{ inputs.proxy_project_name }}/
            ${{ inputs.docker_args }}
            ${{ secrets.docker_args }}
          tags: |
            ${{ steps.image.outputs.image_name }}:${{ steps.image.outputs.image_tag }}
            ${{ steps.image.outputs.image_name }}:latest
            ${{ inputs.docker_tags }}