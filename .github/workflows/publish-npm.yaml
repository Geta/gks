name: Publish NPM client package 
on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
        description: Environment name
      version:
        required: true
        type: string
        description: Version number
      settings:
        required: true
        type: string
        description: Settings json string
      nswag_config:
        required: false
        default: typescript.json
        type: string
        description: NSwag config file path
jobs:
  publish:
    name: Publish NPM client
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.GKS_GH_ACCESS_TOKEN }}
          submodules: false
      -
        name: Install NSwag
        shell: bash
        run: npm install -g nswag
      -
        name: Download NSwag config
        id: config
        shell: bash
        run: |
          URL=$(echo "https://${{ secrets.GKS_GH_ACCESS_TOKEN }}@raw.githubusercontent.com/Geta/gks/${{ fromJson(inputs.settings).clients.npm.packageTemplateRevision }}/assets/nswag/${{ inputs.nswag_config }}")
          FILE_PATH=$(echo "./nswag.json")
          curl -L $URL > $FILE_PATH
          echo "file=$FILE_PATH" >> $GITHUB_OUTPUT
      -
        name: Generate NSwag client
        id: client
        shell: bash
        run: |
          OUTPUT_PATH=$(echo "${{ fromJson(inputs.settings).clients.npm.srcFilesDir }}/output")
          nswag run "${{ steps.config.outputs.file }}" /variables:Configuration=Release,Environment=CI,Runtime=Net80PathToSwaggerJson=${{ fromJson(inputs.settings).clients.npm.srcFilesDir }}/swagger.json,OutputPath=$OUTPUT_PATH
          echo "path=$OUTPUT_PATH" >> $GITHUB_OUTPUT
      - 
        name: Publish NPM client
        uses: Geta/gks/actions/publish-npm-package@v5
        with:
          repository_name: ${{ fromJson(inputs.settings).clients.npm.repositoryName }}
          service_name: ${{ fromJson(inputs.settings).clients.npm.serviceName }}
          version: ${{ inputs.version }}
          build_number: ${{ github.run_number }}
          env: ${{ inputs.env }}
          template_revision: ${{ fromJson(inputs.settings).clients.npm.packageTemplateRevision }}
          src_files_dir: ${{ steps.client.outputs.path }}
          node_version: ${{ fromJson(inputs.settings).clients.npm.nodeVersion }}
          gh_token: ${{ secrets.GKS_GH_ACCESS_TOKEN }}
          packages_url: ${{ fromJson(inputs.settings).artifacts.npm.registryUrl }}