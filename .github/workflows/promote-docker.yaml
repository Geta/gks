name: Promote Docker image
on:
  workflow_call:
    inputs:
      phase:
        required: true
        type: number
        description: Build phase index
      app_index:
        required: true
        type: number
        description: App settings index
      env:
        required: true
        type: string
        description: Environment name
      version:
        required: true
        type: string
        description: Version number
      settings:
        required: true
        type: string
        description: Settings json string
      slack_artifact_name:
        required: false
        type: string
        default: ''
        description: Github artifact name containing slack template
      slack_template_file:
        required: false
        type: string
        default: ''
        description: Slack message template file name
      slack_phase_state:
        required: false
        type: string
        default: ''
        description: Slack notification state
    outputs:
      image_name:
        value: ${{ jobs.docker.outputs.image_name }}
        description: Docker image name
      image_tag:
        value: ${{ jobs.docker.outputs.image_tag }}
        description: Docker image tag
      slack_state:
        value: ${{ jobs.docker.outputs.slack_state }}
        description: Slack phase state
      slack_message_id:
        value: ${{ jobs.docker.outputs.slack_message_id }}
jobs:
  docker:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.push.outputs.image_name }}
      image_tag: ${{ steps.push.outputs.image_tag }}
      slack_state: ${{ steps.after-build-template.outputs.state }}
      slack_message_id: ${{ steps.slack.outputs.ts }}
    env:
      STATUS_STEP: ""
      SLACK_TEMPLATE_DIR: /tmp/slack
    steps:
      -
        name: Download notification template
        if: inputs.slack_artifact_name != ''
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.slack_artifact_name }}-${{ inputs.app_index }}-${{ github.run_id }}
          path: ${{ env.SLACK_TEMPLATE_DIR }}
      -
        name: Add build start notification step
        if: inputs.slack_artifact_name != ''
        id: slack-build-start
        uses: Geta/gks/actions/add-notification-step@v5
        with:
          template_path: ${{ env.SLACK_TEMPLATE_DIR }}/${{ inputs.slack_template_file }}
          phase: ${{ inputs.phase }}
          step: ":hourglass: *Docker image*"
          state: ${{ inputs.slack_phase_state }}
      -
        name: Notify start
        if: inputs.slack_artifact_name != ''
        id: slack
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: ${{ fromJson(inputs.settings).notifications.slack.channels[0].id }}
          payload-file-path: ${{ env.SLACK_TEMPLATE_DIR }}/${{ inputs.slack_template_file }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.GKS_GCC_SLACK_BOT_TOKEN }}
      - 
        name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.GKS_GH_ACCESS_TOKEN }}
          submodules: ${{ fromJson(inputs.settings).source.submodules }}
      - 
        name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ fromJson(inputs.settings).artifacts.docker.repoUrl }}
          username: ${{ secrets.GKS_DOCKER_REGISTRY_USER }}
          password: ${{ secrets.GKS_DOCKER_REGISTRY_PASSWORD }}
      -
        name: Pull Docker image
        id: pull
        run: |
          IMAGE=$(echo "${{ fromJson(inputs.settings).artifacts.docker.repoUrl }}/${{ fromJson(inputs.settings).general.apps[inputs.app_index].name }}/${{ inputs.env }}")
          TAG=$(echo "${{ inputs.version }}")
          PULL=$(echo "$IMAGE:$TAG")
          docker pull $PULL
          echo "image=$PULL" >> $GITHUB_OUTPUT
      - 
        name: Push Docker image
        id: push
        run: |
          IMAGE=$(echo "${{ fromJson(inputs.settings).artifacts.docker.repoUrl }}/${{ fromJson(inputs.settings).general.apps[inputs.app_index].name }}")
          docker tag '${{ steps.pull.outputs.image }}' "$IMAGE:latest"
          docker tag '${{ steps.pull.outputs.image }}' "$IMAGE:${{ inputs.version }}"
          docker push "$IMAGE:latest"
          docker push "$IMAGE:${{ inputs.version }}"
          echo "image_name=$IMAGE" >> $GITHUB_OUTPUT
          echo "image_tag=${{ inputs.version }}" >> $GITHUB_OUTPUT
      -
        name: Report Docker image
        run: |
          echo ':whale: ${{ steps.push.outputs.image_name }}:${{ inputs.version }}' >> $GITHUB_STEP_SUMMARY
      -
        name: Prepare success slack message
        if: success()
        run: |
          STEP=$(echo ":white_check_mark: *Docker image*")
          echo "STATUS_STEP=$STEP" >> $GITHUB_ENV
      -
        name: Prepare failure slack message
        if: failure()
        run: |
          STEP=$(echo ":x: *Docker image*")
          echo "STATUS_STEP=$STEP" >> $GITHUB_ENV
      -
        name: Prepare cancel slack message
        if: cancelled()
        run: |
          STEP=$(echo ":grey_exclamation: *Docker image*")
          echo "STATUS_STEP=$STEP" >> $GITHUB_ENV
      -
        name: Add build status notification step
        if: always() && steps.slack.conclusion == 'success' && inputs.slack_artifact_name != ''
        id: after-build-template
        uses: Geta/gks/actions/add-notification-step@v5
        with:
          template_path: ${{ env.SLACK_TEMPLATE_DIR }}/${{ inputs.slack_template_file }}
          phase: ${{ inputs.phase }}
          step: ${{ env.STATUS_STEP }}
          state: ${{ steps.slack-build-start.outputs.state }}
      -
        name: Notify status
        if: always() && inputs.slack_artifact_name != ''
        uses: slackapi/slack-github-action@v1
        with:
          update-ts: ${{ steps.slack.outputs.ts }}
          channel-id: ${{ fromJson(inputs.settings).notifications.slack.channels[0].id }}
          payload-file-path: ${{ env.SLACK_TEMPLATE_DIR }}/${{ inputs.slack_template_file }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.GKS_GCC_SLACK_BOT_TOKEN }}