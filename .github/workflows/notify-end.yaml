name: Notify end
on:
  workflow_call:
    inputs:
      channel_index:
        required: true
        type: number
        description: Slack channel config index
      phase:
        required: true
        type: number
        description: Build phase index
      step:
        required: true
        type: string
        description: Step notification step
      result:
        required: true
        type: string
        description: Step result
      slack_phase_state:
        required: true
        type: string
        description: Slack notification state
      slack_artifact_name:
        required: true
        type: string
        description: Github artifact name containing slack template
      slack_template_file:
        required: true
        type: string
        description: Slack message template file name
      slack_template_dir:
        required: false
        type: string
        default: /tmp/slack
        description: Template file directory
    outputs:
      slack_state:
        value: ${{ jobs.notify.outputs.slack_state }}
        description: Slack state
      slack_message_id:
        value: ${{ jobs.notify.outputs.slack_message_id }}
        description: Slack message id
jobs:
  notify:
    name: Compose and send Slack message
    runs-on: ubuntu-latest
    outputs:
      slack_state: ${{ steps.notification.outputs.state }}
      slack_message_id: ${{ steps.slack.outputs.ts }}
    env:
      STATUS_STEP: ""
    steps:
      -
        name: Prepare success Slack message
        if: inputs.result == 'success'
        run: |
          STEP=$(echo ":white_check_mark: *${{ inputs.step }}*")
          echo "STATUS_STEP=$STEP" >> $GITHUB_ENV
      -
        name: Prepare failure Slack message
        if: inputs.result == 'failure'
        run: |
          STEP=$(echo ":x: *${{ inputs.step }}*")
          echo "STATUS_STEP=$STEP" >> $GITHUB_ENV
      -
        name: Prepare cancel Slack message
        if: inputs.result == 'cancelled'
        run: |
          STEP=$(echo ":grey_exclamation: *${{ inputs.step }}*")
          echo "STATUS_STEP=$STEP" >> $GITHUB_ENV
      -
        name: Download notification template
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.slack_artifact_name }}
          path: ${{ inputs.slack_template_dir }}
      -
        name: Add end notification step
        id: notification
        uses: Geta/gks/actions/add-notification-step@actions/v3
        with:
          template_path: ${{ inputs.slack_template_dir }}/${{ inputs.slack_template_file }}
          phase: ${{ inputs.phase }}
          step: ${{ env.STATUS_STEP }}
          state: ${{ inputs.slack_phase_state }}
      -
        name: Send Slack notification
        id: slack
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: ${{ fromJson(inputs.settings).notifications.slack.channels[inputs.channel_index] }}
          payload-file-path: ${{ inputs.slack_template_dir }}/${{ inputs.slack_template_file }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.GKS_GCC_SLACK_BOT_TOKEN }}