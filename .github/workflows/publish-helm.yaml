name: Publish Helm chart
on:
  workflow_call:
    inputs:
      phase:
        required: true
        type: number
        description: Build phase index
      app_index:
        required: true
        type: number
        description: Application settings index
      env:
        required: true
        type: string
        description: Environment name
      version:
        required: true
        type: string
        description: Version number
      settings:
        required: true
        type: string
        description: Settings json string
      image_name:
        required: true
        type: string
        description: Docker image name
      image_tag:
        required: true
        type: string
        description: Docker image tag
      slack_artifact_name:
        required: false
        type: string
        default: ''
        description: Github artifact name containing slack template
      slack_template_file:
        required: false
        type: string
        default: ''
        description: Slack message template file name
      slack_phase_state:
        required: false
        type: string
        default: ''
        description: Slack notification state
      slack_message_id:
        required: false
        type: string
        default: ''
        description: Slack message id
      step:
        required: false
        type: string
        default: Helm chart
        description: Step name
    outputs:
      slack_state:
        value: ${{ jobs.helm.outputs.slack_state }}
        description: Slack phase state
jobs:
  notify_start:
    name: Notify step started to channel ${{ matrix.channel.id }}
    strategy:
      matrix: 
        channel: ${{ fromJson(inputs.settings).notifications.slack.channels }}
    uses: Geta/gks/.github/workflows/notify-start.yaml@workflows/v4
    secrets: inherit
    with:
      channel_id: ${{ matrix.channel.id }}
      phase: ${{ inputs.phase }}
      step: ${{ inputs.step }}
      slack_phase_state: ${{ inputs.slack_phase_state }}
      slack_artifact_name: ${{ inputs.slack_artifact_name }}
      slack_template_file: ${{ inputs.slack_template_file }}
      matrix_step_name: ${{ github.job }}
      matrix_key: ${{ matrix.channel }}

  chart:
    if: always()
    runs-on: ubuntu-latest
    needs: [ notify_start ]
    name: Package and push helm chart
    env:
      MAIN_REPO_ALIAS: main
      TEMPLATE_REPO_ALIAS: template
      STATUS_STEP: ""
      SLACK_TEMPLATE_DIR: /tmp/slack
    outputs:
      slack_state: ${{ steps.after-build-template.outputs.state }}
    steps:
      -
        name: Install Helm
        uses: azure/setup-helm@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GKS_GH_ACCESS_TOKEN }}
      -
        name: Install Helm Push plugin
        run: helm plugin install --version v0.10.3 https://github.com/chartmuseum/helm-push.git
      -
        name: Add main Helm repo
        uses: Geta/gks/actions/add-helm-repo@actions/v2
        with:
          alias: ${{ env.MAIN_REPO_ALIAS }}
          user: ${{ secrets.GKS_HELM_REGISTRY_USER }}
          token: ${{ secrets.GKS_HELM_REGISTRY_PASSWORD }}
          url: ${{ fromJson(inputs.settings).artifacts.helm.repoUrl }}
      -
        name: Add template Helm repo
        uses: Geta/gks/actions/add-helm-repo@actions/v2
        with:
          alias: ${{ env.TEMPLATE_REPO_ALIAS }}
          user: ${{ secrets.GKS_HELM_REGISTRY_USER }}
          token: ${{ secrets.GKS_HELM_REGISTRY_PASSWORD }}
          url: ${{ fromJson(inputs.settings).artifacts.helm.template.repoUrl }}
      -
        name: Compose Helm chart name
        id: chart
        run: |
          PREFIX=$([[ '${{ fromJson(inputs.settings).build.helm.chartNamePrefix }}' != '' ]] && echo '${{ fromJson(inputs.settings).build.helm.chartNamePrefix }}-' || echo '')
          NAME=$(echo ${{ fromJson(inputs.settings).general.apps[inputs.app_index].name }}-${{ inputs.env }})
          CHART_NAME="$PREFIX$NAME"
          CHART_VERSION="${{ inputs.version }}-${{ github.run_number }}"
          echo "chart_name=$CHART_NAME" >> $GITHUB_OUTPUT
          echo "chart_version=$CHART_VERSION" >> $GITHUB_OUTPUT
      -
        name: Pull template chart
        uses: Geta/gks/actions/pull-chart@actions/v2
        with:
          chart_dir: chart/${{ fromJson(inputs.settings).artifacts.helm.template.name }}
          chart_name: ${{ fromJson(inputs.settings).artifacts.helm.template.name }}
          chart_version: ${{ fromJson(inputs.settings).artifacts.helm.template.version }}
          repo_alias: ${{ env.TEMPLATE_REPO_ALIAS }}
      -
        name: Set chart info
        uses: Geta/gks/actions/set-chart-info@actions/v2
        with:
          chart_dir: chart/${{ fromJson(inputs.settings).artifacts.helm.template.name }}
          chart_name: ${{ steps.chart.outputs.chart_name }}
          chart_description: ${{ fromJson(inputs.settings).general.apps[inputs.app_index].name }} chart
          chart_version: ${{ steps.chart.outputs.chart_version }}
          chart_app_version: ${{ steps.chart.outputs.chart_version }}
          docker_image_url: ${{ inputs.image_name }}
          docker_image_tag: ${{ inputs.image_tag }}
      -
        name: Lint Helm Chart
        uses: Geta/gks/actions/lint-helm-chart@actions/v1
        with:
          chart_dir: chart/${{ fromJson(inputs.settings).artifacts.helm.template.name }}
      -
        name: Generate README
        uses: Geta/gks/actions/generate-chart-readme@actions/v1
        with:
          chart_dir: chart/${{ fromJson(inputs.settings).artifacts.helm.template.name }}
      -
        name: Push service Helm chart
        uses: Geta/gks/actions/package-helm-chart@actions/v2
        with:
          chart_dir: chart/${{ fromJson(inputs.settings).artifacts.helm.template.name }}
          chart_name: ${{ steps.chart.outputs.chart_name }}
          chart_version: ${{ steps.chart.outputs.chart_version }}
          repo_alias: ${{ env.MAIN_REPO_ALIAS }}
          push: true
      -
        name: Report Helm chart
        run: |
          echo ':file_folder: ${{ steps.chart.outputs.chart_name }}:${{ steps.chart.outputs.chart_version }}' >> $GITHUB_STEP_SUMMARY
  
  notify_end:
    needs: [ notify_start, chart ]
    if: needs.notify_start.result == 'success'
    name: Notify step finished to channel ${{ matrix.channel.id }}
    strategy:
      matrix: 
        channel: ${{ fromJson(inputs.settings).notifications.slack.channels }}
    uses: Geta/gks/.github/workflows/notify-end.yaml@workflows/v4
    secrets: inherit
    with:
      channel_id: ${{ matrix.channel.id }}
      phase: ${{ inputs.phase }}
      result: ${{ needs.chart.result }}
      step: ${{ inputs.step }}
      slack_artifact_name: ${{ inputs.slack_artifact_name }}
      slack_template_file: ${{ inputs.slack_template_file }}
      matrix_step_name: notify_start